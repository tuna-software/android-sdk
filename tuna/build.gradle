plugins {
    id 'maven-publish'
    id 'java-library'
    id 'kotlin'
}

def githubProperties = new Properties()
githubProperties.load(
        new FileInputStream(rootProject.file("github.properties"))
)

def versionProperties = new Properties()
versionProperties.load(
        new FileInputStream(rootProject.file("version.properties"))
)

def getVersionName = { ->
    return versionProperties["tuna.sdk.version"]
}


def getArtifactId = { ->
    return "tuna"
}

publishing {
    publications {
        tuna(MavenPublication) {
            groupId 'com.tunasoftware'
            artifactId getArtifactId()
            version getVersionName()
            artifact("$buildDir/libs/${getArtifactId()}.jar")
            pom.withXml { // adding transitive dependencies...
                final dependenciesNode = asNode().appendNode('dependencies')
                ext.addDependency = { Dependency dep, String scope ->
                    if (dep.group == null || dep.version == null ||
                            dep.name == null || dep.name == "unspecified")
                        return
                    final dependencyNode = dependenciesNode
                            .appendNode('dependency')
                    dependencyNode.appendNode('groupId', dep.group)
                    dependencyNode.appendNode('artifactId', dep.name)
                    dependencyNode.appendNode('version', dep.version)
                    dependencyNode.appendNode('scope', scope)
                    if (!dep.transitive) {
                        final exclusionNode = dependencyNode
                                .appendNode('exclusions')
                                .appendNode('exclusion')
                        exclusionNode.appendNode('groupId', '*')
                        exclusionNode.appendNode('artifactId', '*')
                    } else if (!dep.properties.excludeRules.empty) {
                        final exclusionNode = dependencyNode
                                .appendNode('exclusions')
                                .appendNode('exclusion')
                        dep.properties.excludeRules.each { ExcludeRule rule ->
                            exclusionNode.appendNode(
                                    'groupId', rule.group ?: '*')
                            exclusionNode.appendNode(
                                    'artifactId', rule.module ?: '*')
                        }
                    }
                } // end addDependency
                configurations.compile.getDependencies().each { dep ->
                    addDependency(dep, "compile")
                }
                configurations.api.getDependencies().each { dep ->
                    addDependency(dep, "compile")
                }
                configurations.implementation.getDependencies().each {dep ->
                    addDependency(dep, "runtime")
                }
            } // end pomWithXml
        }
    }

    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/tuna-software/android-sdk")
            credentials {
                username = githubProperties['gpr.usr'] ?: System.getenv("GPR_USER")
                password = githubProperties['gpr.key'] ?: System.getenv("GPR_API_KEY")
            }
        }
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}


dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation "com.squareup.okhttp3:okhttp:4.9.0"
    implementation 'com.google.code.gson:gson:2.8.6'

    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.3'

    //Testing
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0'
    testImplementation 'org.mockito:mockito-inline:2.8.47'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.2'
    testImplementation "com.squareup.okhttp3:mockwebserver:4.9.0"

}